ILOC Simulator, Version 412-2015-2
Interlock settings: memory registers branches 

0:	[loadI 128 => r4 (128)]
1:	[loadI 132 => r3 (132)]
2:	[loadI 136 => r2 (136)]
3:	[loadI 140 => r1 (140)]
4:	[loadI 144 => r0 (144)]
5:	[loadI 32768 => r4 (32768)]
6:	[store r4 (32768) => r4 (addr: 32768)]
7:	[loadI 148 => r4 (148)]
8:	[loadI 32772 => r4 (32772)] *6
9:	[store r4 (32772) => r4 (addr: 32772)]
10:	[loadI 152 => r4 (152)]
11:	[loadI 32776 => r4 (32776)] *9
12:	[store r4 (32776) => r4 (addr: 32776)]
13:	[loadI 156 => r4 (156)]
14:	[loadI 32780 => r4 (32780)] *12
15:	[store r4 (32780) => r4 (addr: 32780)]
16:	[loadI 160 => r4 (160)]
17:	[loadI 32784 => r4 (32784)] *15
18:	[store r4 (32784) => r4 (addr: 32784)]
19:	[loadI 164 => r4 (164)]
20:	[loadI 32788 => r4 (32788)] *18
21:	[store r4 (32788) => r4 (addr: 32788)]
22:	[loadI 168 => r4 (168)]
23:	[loadI 32792 => r4 (32792)] *21
24:	[store r4 (32792) => r4 (addr: 32792)]
25:	[loadI 172 => r4 (172)]
26:	[loadI 32796 => r4 (32796)] *24
27:	[store r4 (32796) => r4 (addr: 32796)]
28:	[loadI 176 => r4 (176)]
29:	[loadI 32800 => r4 (32800)] *27
30:	[store r4 (32800) => r4 (addr: 32800)]
31:	[loadI 180 => r4 (180)]
32:	[loadI 32804 => r4 (32804)] *30
33:	[store r4 (32804) => r4 (addr: 32804)]
34:	[loadI 184 => r4 (184)]
35:	[loadI 32808 => r4 (32808)] *33
36:	[store r4 (32808) => r4 (addr: 32808)]
37:	[loadI 188 => r4 (188)]
38:	[loadI 32812 => r4 (32812)] *36
39:	[store r4 (32812) => r4 (addr: 32812)]
40:	[loadI 192 => r4 (192)]
41:	[loadI 32816 => r4 (32816)] *39
42:	[store r4 (32816) => r4 (addr: 32816)]
43:	[loadI 196 => r4 (196)]
44:	[loadI 32820 => r4 (32820)] *42
45:	[store r4 (32820) => r4 (addr: 32820)]
46:	[loadI 200 => r4 (200)]
47:	[loadI 32824 => r4 (32824)] *45
48:	[store r4 (32824) => r4 (addr: 32824)]
49:	[loadI 204 => r4 (204)]
50:	[load r4 (addr: 204) => r4 (20)] *48
51:	[ stall ]
52:	[ stall ] *50
53:	[loadI 32828 => r4 (32828)]
54:	[store r4 (32828) => r4 (addr: 32828)]
55:	[loadI 32824 => r4 (32824)]
56:	[load r4 (addr: 32824) => r4 (32824)] *54
57:	[ stall ]
58:	[ stall ] *56
59:	[load r4 (addr: 32824) => r4 (32824)]
60:	[ stall ]
61:	[ stall ] *59
62:	[loadI 32832 => r4 (32832)]
63:	[store r4 (32832) => r4 (addr: 32832)]
64:	[loadI 32820 => r4 (32820)]
65:	[load r4 (addr: 32820) => r4 (32820)] *63
66:	[ stall ]
67:	[ stall ] *65
68:	[load r4 (addr: 32820) => r4 (32820)]
69:	[ stall ]
70:	[ stall ] *68
71:	[loadI 32836 => r4 (32836)]
72:	[store r4 (32836) => r4 (addr: 32836)]
73:	[loadI 32816 => r4 (32816)]
74:	[load r4 (addr: 32816) => r4 (32816)] *72
75:	[ stall ]
76:	[ stall ] *74
77:	[load r4 (addr: 32816) => r4 (32816)]
78:	[ stall ]
79:	[ stall ] *77
80:	[loadI 32840 => r4 (32840)]
81:	[store r4 (32840) => r4 (addr: 32840)]
82:	[loadI 32812 => r4 (32812)]
83:	[load r4 (addr: 32812) => r4 (32812)] *81
84:	[ stall ]
85:	[ stall ] *83
86:	[load r4 (addr: 32812) => r4 (32812)]
87:	[ stall ]
88:	[ stall ] *86
89:	[loadI 32844 => r4 (32844)]
90:	[store r4 (32844) => r4 (addr: 32844)]
91:	[loadI 32808 => r4 (32808)]
92:	[load r4 (addr: 32808) => r4 (32808)] *90
93:	[ stall ]
94:	[ stall ] *92
95:	[load r4 (addr: 32808) => r4 (32808)]
96:	[ stall ]
97:	[ stall ] *95
98:	[loadI 32848 => r4 (32848)]
99:	[store r4 (32848) => r4 (addr: 32848)]
100:	[loadI 32804 => r4 (32804)]
101:	[load r4 (addr: 32804) => r4 (32804)] *99
102:	[ stall ]
103:	[ stall ] *101
104:	[load r4 (addr: 32804) => r4 (32804)]
105:	[ stall ]
106:	[ stall ] *104
107:	[loadI 32788 => r4 (32788)]
108:	[load r4 (addr: 32788) => r4 (32788)]
109:	[ stall ]
110:	[ stall ] *108
111:	[loadI 32852 => r4 (32852)]
112:	[store r3 (132) => r4 (addr: 32852)]
113:	[loadI 32800 => r4 (32800)]
114:	[load r4 (addr: 32800) => r3 (32800)] *112
115:	[ stall ]
116:	[ stall ] *114
117:	[store r4 (32800) => r3 (addr: 32800)]
118:	[ stall ]
119:	[ stall ] *117
120:	[load r3 (addr: 32800) => r3 (32800)]
121:	[loadI 32796 => r4 (32796)]
122:	[ stall ] *120
123:	[load r4 (addr: 32796) => r3 (32796)]
124:	[ stall ]
125:	[ stall ] *123
126:	[load r3 (addr: 32796) => r3 (32796)]
127:	[loadI 32856 => r4 (32856)]
128:	[ stall ] *126
129:	[store r3 (32796) => r4 (addr: 32856)]
130:	[loadI 32792 => r4 (32792)]
131:	[load r4 (addr: 32792) => r3 (32792)] *129
132:	[ stall ]
133:	[ stall ] *131
134:	[load r3 (addr: 32792) => r3 (32792)]
135:	[load r4 (addr: 32792) => r4 (32792)]
136:	[ stall ] *134
137:	[ stall ] *135
138:	[loadI 32860 => r4 (32860)]
139:	[store r3 (32792) => r4 (addr: 32860)]
140:	[loadI 32784 => r4 (32784)]
141:	[load r4 (addr: 32784) => r3 (32784)] *139
142:	[ stall ]
143:	[ stall ] *141
144:	[load r3 (addr: 32784) => r3 (32784)]
145:	[loadI 32864 => r4 (32864)]
146:	[store r4 (32864) => r4 (addr: 32864)] *144
147:	[loadI 32780 => r4 (32780)]
148:	[load r4 (addr: 32780) => r4 (32780)] *146
149:	[ stall ]
150:	[ stall ] *148
151:	[load r4 (addr: 32780) => r4 (32780)]
152:	[ stall ]
153:	[ stall ] *151
154:	[loadI 32868 => r4 (32868)]
155:	[store r3 (32784) => r4 (addr: 32868)]
156:	[loadI 32776 => r4 (32776)]
157:	[load r4 (addr: 32776) => r3 (32776)] *155
158:	[ stall ]
159:	[ stall ] *157
160:	[load r3 (addr: 32776) => r3 (32776)]
161:	[loadI 32872 => r4 (32872)]
162:	[store r4 (32872) => r4 (addr: 32872)] *160
163:	[loadI 32772 => r4 (32772)]
164:	[load r4 (addr: 32772) => r4 (32772)] *162
165:	[ stall ]
166:	[ stall ] *164
167:	[load r4 (addr: 32772) => r4 (32772)]
168:	[load r0 (addr: 144) => r0 (5)]
169:	[load r1 (addr: 140) => r1 (4)] *167
170:	[load r2 (addr: 136) => r2 (3)] *168
171:	[loadI 32876 => r4 (32876)] *169
172:	[store r3 (32776) => r4 (addr: 32876)] *170
173:	[loadI 32852 => r4 (32852)]
174:	[load r4 (addr: 32852) => r3 (132)] *172
175:	[ stall ]
176:	[ stall ] *174
177:	[load r3 (addr: 132) => r3 (2)]
178:	[loadI 32880 => r4 (32880)]
179:	[store r4 (32880) => r4 (addr: 32880)] *177
180:	[loadI 32768 => r4 (32768)]
181:	[load r4 (addr: 32768) => r4 (32768)] *179
182:	[ stall ]
183:	[ stall ] *181
184:	[load r4 (addr: 32768) => r4 (32768)]
185:	[ stall ]
186:	[ stall ] *184
187:	[add r4 (32768), r3 (2) => r3 (32770)]
188:	[add r3 (32770), r2 (3) => r2 (32773)]
189:	[add r2 (32773), r1 (4) => r1 (32777)]
190:	[add r1 (32777), r0 (5) => r0 (32782)]
191:	[loadI 32880 => r4 (32880)]
192:	[load r4 (addr: 32880) => r1 (32880)]
193:	[ stall ]
194:	[ stall ] *192
195:	[add r0 (32782), r1 (32880) => r1 (65662)]
196:	[loadI 32876 => r4 (32876)]
197:	[load r4 (addr: 32876) => r0 (32776)]
198:	[ stall ]
199:	[ stall ] *197
200:	[add r1 (65662), r0 (32776) => r0 (98438)]
201:	[loadI 32872 => r4 (32872)]
202:	[load r4 (addr: 32872) => r1 (32872)]
203:	[ stall ]
204:	[ stall ] *202
205:	[add r0 (98438), r1 (32872) => r1 (131310)]
206:	[loadI 32868 => r4 (32868)]
207:	[load r4 (addr: 32868) => r0 (32784)]
208:	[ stall ]
209:	[ stall ] *207
210:	[add r1 (131310), r0 (32784) => r0 (164094)]
211:	[loadI 32864 => r4 (32864)]
212:	[load r4 (addr: 32864) => r1 (32864)]
213:	[ stall ]
214:	[ stall ] *212
215:	[add r0 (164094), r1 (32864) => r1 (196958)]
216:	[loadI 32860 => r4 (32860)]
217:	[load r4 (addr: 32860) => r0 (32792)]
218:	[ stall ]
219:	[ stall ] *217
220:	[add r1 (196958), r0 (32792) => r0 (229750)]
221:	[loadI 32856 => r4 (32856)]
222:	[load r4 (addr: 32856) => r1 (32796)]
223:	[ stall ]
224:	[ stall ] *222
225:	[add r0 (229750), r1 (32796) => r1 (262546)]
226:	[loadI 32848 => r4 (32848)]
227:	[load r4 (addr: 32848) => r0 (32848)]
228:	[ stall ]
229:	[ stall ] *227
230:	[add r1 (262546), r0 (32848) => r0 (295394)]
231:	[loadI 32844 => r4 (32844)]
232:	[load r4 (addr: 32844) => r1 (32844)]
233:	[ stall ]
234:	[ stall ] *232
235:	[add r0 (295394), r1 (32844) => r1 (328238)]
236:	[loadI 32840 => r4 (32840)]
237:	[load r4 (addr: 32840) => r0 (32840)]
238:	[ stall ]
239:	[ stall ] *237
240:	[add r1 (328238), r0 (32840) => r0 (361078)]
241:	[loadI 32836 => r4 (32836)]
242:	[load r4 (addr: 32836) => r1 (32836)]
243:	[ stall ]
244:	[ stall ] *242
245:	[add r0 (361078), r1 (32836) => r1 (393914)]
246:	[loadI 32832 => r4 (32832)]
247:	[load r4 (addr: 32832) => r0 (32832)]
248:	[ stall ]
249:	[ stall ] *247
250:	[add r1 (393914), r0 (32832) => r0 (426746)]
251:	[loadI 32828 => r4 (32828)]
252:	[load r4 (addr: 32828) => r1 (32828)]
253:	[ stall ]
254:	[ stall ] *252
255:	[add r0 (426746), r1 (32828) => r1 (459574)]
256:	[loadI 1024 => r0 (1024)]
257:	[store r1 (459574) => r0 (addr: 1024)]
258:	[ stall ]
259:	[ stall ] *257
260:	[output 1024 (459574)]
output generates => 459574
261:	[output 176 (13)]
output generates => 13

Executed 178 instructions and 178 operations in 262 cycles.
